{"ast":null,"code":"var _jsxFileName = \"/Users/sunjitdhillon/Desktop/Project_Clinifind/CliniFind/src/components/DisplayTrials/DisplayTrials.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { API_URL } from \"../../consts\";\nimport { useNavigate } from \"react-router-dom\";\nimport { treeItemClasses } from \"@mui/lab\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Button from '@mui/material/Button';\nimport { red } from \"@mui/material/colors\";\nimport \"./displaytrials.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DisplayTrials = () => {\n  _s();\n\n  const [trial, setTrial] = useState([]);\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n\n  const getProfile = () => {\n    fetch(`${API_URL}/profile`, {\n      method: 'POST',\n      credentials: 'include'\n    }).then(res => res.json()).then(user => {\n      setUser(user);\n    });\n  };\n\n  useEffect(getProfile, [navigate]);\n\n  const getTrial = () => {\n    fetch(`${API_URL}/displaytrials`, {\n      method: 'GET'\n    }).then(res => res.json()).then(trial => {\n      setTrial(trial);\n    }).then(console.log(typeof trial));\n  }; // const getTrial = () => {\n  //     fetch(`${API_URL}/displaytrials`)\n  //         .then(response => response.json());\n  // }\n\n\n  useEffect(getTrial, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%'\n      },\n      children: trial.map(t => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cf-trials-box\",\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              alignItems: \"flex-start\",\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                className: \"btitle\",\n                primary: t.BriefTitle,\n                secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      display: 'inline'\n                    },\n                    component: \"span\",\n                    variant: \"body2\",\n                    color: \"text.primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Location:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 27\n                  }, this), \" \", t.Location, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Start Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 27\n                  }, this), t.startDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"End Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 27\n                  }, this), t.endDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Recruitment Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 27\n                  }, this), t.RecruitmentStatus, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Brief Summary:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 27\n                  }, this), t.BriefSummary, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Posted By:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 29\n                  }, this), t.PostedBy]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(DisplayTrials, \"HYInm8UJdw1czg4UD+AHPs6Z9oI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DisplayTrials;\nexport default DisplayTrials;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTrials\");","map":{"version":3,"sources":["/Users/sunjitdhillon/Desktop/Project_Clinifind/CliniFind/src/components/DisplayTrials/DisplayTrials.js"],"names":["React","useEffect","useState","API_URL","useNavigate","treeItemClasses","List","ListItem","ListItemText","Typography","Divider","Button","red","DisplayTrials","trial","setTrial","user","setUser","navigate","getProfile","fetch","method","credentials","then","res","json","getTrial","console","log","width","map","t","BriefTitle","display","Location","startDate","endDate","RecruitmentStatus","BriefSummary","PostedBy"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {API_URL} from \"../../consts\";\nimport {useNavigate} from \"react-router-dom\";\nimport { treeItemClasses } from \"@mui/lab\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Button from '@mui/material/Button';\nimport { red } from \"@mui/material/colors\";\nimport \"./displaytrials.css\";\n\nconst DisplayTrials = () => {\n    const [trial, setTrial] = useState([]);\n\n    const [user, setUser] = useState({});\n    const navigate = useNavigate();\n    const getProfile = () => {\n        fetch(`${API_URL}/profile`, {\n            method: 'POST',\n            credentials: 'include'\n        }).then(res => res.json())\n            .then(user => {\n                setUser(user);\n            });\n    }\n\n    useEffect(getProfile, [navigate]);\n\n    const getTrial = () => {\n        fetch(`${API_URL}/displaytrials`, {\n            method: 'GET',\n        }).then(res => res.json())\n            .then(trial => {\n                setTrial(trial)\n            }).then(console.log(typeof(trial))\n            );\n    }\n\n    // const getTrial = () => {\n    //     fetch(`${API_URL}/displaytrials`)\n    //         .then(response => response.json());\n    // }\n\n    useEffect(getTrial, []);\n    return(\n        <>\n\n        <List sx={{ width: '100%' }}>\n        {trial.map((t) => {\n                return <>\n                    <div className = \"cf-trials-box\">\n                  <ListItem alignItems=\"flex-start\">\n                    <ListItemText\n                    className=\"btitle\"\n                      primary={t.BriefTitle}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            sx={{ display: 'inline' }}\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"text.primary\"\n                          >\n                          </Typography>\n                          <b>Location:</b> {t.Location}\n                          <br/>\n                          <b>Start Date:</b>{t.startDate}\n                          <br/>\n                          <b>End Date:</b>{t.endDate}\n                          <br/>\n                          <b>Recruitment Status:</b>{t.RecruitmentStatus}\n                          <br/>\n                          <b>Brief Summary:</b>{t.BriefSummary}\n                          <br/>\n                            <b>Posted By:</b>{t.PostedBy}\n                        </React.Fragment>\n                      }\n                    />\n                   \n                  </ListItem>\n                    </div>\n                  <Divider component=\"li\" />\n                </>\n\n            })}\n                \n            </List>\n            </>\n\n    );\n};\nexport default DisplayTrials;"]},"metadata":{},"sourceType":"module"}