{"ast":null,"code":"var _jsxFileName = \"/Users/arushiagarwal/Desktop/CliniFind/src/components/Signup/SignupForm.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useNavigate } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { API_URL } from \"../../consts\";\nimport Sponsor from \"../Profile/Sponsor\";\nimport Researcher from \"../Profile/Researcher\";\nimport Participant from \"../Profile/Participant\";\nimport { Button, TextField, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = () => {\n  _s();\n\n  // let typeRole;\n  // if (this.user.role === \"researcher\") {\n  //     typeRole = \"researcher\";\n  // } else if (this.user.role === \"sponsor\") {\n  //     typeRole = \"sponsor\";\n  // } else {\n  //     typeRole = \"participant\";\n  // }\n  const [user, setUser] = useState({\n    username: 'alice',\n    password: 'alice123',\n    role: 'participant'\n  });\n  const navigate = useNavigate();\n\n  const register = e => {\n    e.preventDefault();\n    console.log(user.role);\n    fetch(`${API_URL}/register`, {\n      method: 'POST',\n      body: JSON.stringify(user),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(status => navigate('/participant'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        value: user.username,\n        onChange: e => setUser({ ...user,\n          username: e.target.value\n        }),\n        placeholder: \"username\",\n        className: \"form-control\",\n        required: true,\n        fullWidth: true,\n        label: \"Username\",\n        name: \"username\",\n        floatingLabelText: \" username\",\n        margin: \"dense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        value: user.password,\n        onChange: e => setUser({ ...user,\n          password: e.target.value\n        }),\n        placeholder: \"password\",\n        type: \"password\",\n        className: \"form-control\",\n        required: true,\n        fullWidth: true,\n        label: \"Password\",\n        name: \"password\",\n        floatingLabelText: \"password\",\n        margin: \"dense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"role\",\n          name: \"row-radio-buttons-group\",\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"sponsor\",\n            onChange: e => setUser({ ...user,\n              role: e.target.value\n            }),\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 30\n            }, this),\n            label: \"Sponsor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"participant\",\n            onChange: e => setUser({ ...user,\n              role: e.target.value\n            }),\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 31\n            }, this),\n            label: \"Participant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"researcher\",\n            onChange: e => setUser({ ...user,\n              role: e.target.value\n            }),\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 30\n            }, this),\n            label: \"Researcher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"signup-button\",\n        variant: \"contained\",\n        onClick: register(user.role),\n        children: user.role === \"researcher\" ? /*#__PURE__*/_jsxDEV(Link, {\n          className: \"login-link\",\n          to: \"/researcher\",\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 48\n        }, this) : user.role === \"sponsor\" ? /*#__PURE__*/_jsxDEV(Link, {\n          className: \"login-link\",\n          to: \"/sponsor\",\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          className: \"login-link\",\n          to: \"/participant\",\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login-option\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"login-link\",\n        to: \"/login\",\n        children: \"Or Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignupForm, \"v6/lqKwRMoY9+6q7XxukeW2WwjY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/Users/arushiagarwal/Desktop/CliniFind/src/components/Signup/SignupForm.js"],"names":["Link","useNavigate","React","useState","BrowserRouter","Routes","Route","API_URL","Sponsor","Researcher","Participant","Button","TextField","FormControl","FormControlLabel","FormLabel","Radio","RadioGroup","SignupForm","user","setUser","username","password","role","navigate","register","e","preventDefault","console","log","fetch","method","body","JSON","stringify","credentials","headers","then","status","target","value"],"mappings":"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","sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\nimport React, {useState} from \"react\";\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport {API_URL} from \"../../consts\";\nimport Sponsor from \"../Profile/Sponsor\";\nimport Researcher from \"../Profile/Researcher\";\nimport Participant from \"../Profile/Participant\";\nimport {Button, TextField, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup} from \"@mui/material\";\n\nconst SignupForm = () => {\n\n    // let typeRole;\n\n    // if (this.user.role === \"researcher\") {\n    //     typeRole = \"researcher\";\n    // } else if (this.user.role === \"sponsor\") {\n    //     typeRole = \"sponsor\";\n    // } else {\n    //     typeRole = \"participant\";\n    // }\n\n    const [user, setUser] = useState({username: 'alice', password: 'alice123', role: 'participant'});\n    const navigate = useNavigate();\n    const register = (e) => {\n        e.preventDefault();\n        console.log(user.role);\n        fetch(`${API_URL}/register`, {\n            method: 'POST',\n            body: JSON.stringify(user),\n            credentials: 'include',\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(status => navigate('/participant'));\n    };\n    return(\n        <div>\n            <form>\n                <TextField id=\"standard-basic\"\n                           value={user.username}\n                           onChange={(e) => setUser({...user, username: e.target.value})}\n                           placeholder=\"username\"\n                           className=\"form-control\"\n                           required fullWidth\n                           label = \"Username\"\n                           name=\"username\"\n                           floatingLabelText=\" username\"\n                           margin=\"dense\"\n                /><br/>\n                <TextField id=\"standard-basic\"\n                           value={user.password}\n                           onChange={(e) => setUser({...user, password: e.target.value})}\n                           placeholder=\"password\"\n                           type=\"password\"\n                           className=\"form-control\"\n                           required fullWidth\n                           label = \"Password\"\n                           name=\"password\"\n                           floatingLabelText=\"password\"\n                           margin=\"dense\"\n                /><br/>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Role</FormLabel>\n                  <RadioGroup row aria-label=\"role\" name=\"row-radio-buttons-group\">\n                    <FormControlLabel value=\"sponsor\"\n                    onChange={(e) => setUser({...user, role: e.target.value})}\n                    control={<Radio />} label=\"Sponsor\" />\n                    <FormControlLabel value=\"participant\"\n                     onChange={(e) => setUser({...user, role: e.target.value})}\n                     control={<Radio />} label=\"Participant\" />\n                    <FormControlLabel value=\"researcher\"\n                     onChange={(e) => setUser({...user, role: e.target.value})}\n                    control={<Radio />} label=\"Researcher\" />\n                  </RadioGroup>\n                </FormControl>\n\n                <Button className=\"signup-button\" variant=\"contained\" onClick={register(user.role)}>\n                {user.role === \"researcher\" ? (<Link className=\"login-link\" to=\"/researcher\">REGISTER</Link>)\n                : (user.role === \"sponsor\" ? (<Link className=\"login-link\" to=\"/sponsor\">REGISTER</Link>)\n            : (<Link className=\"login-link\" to=\"/participant\">REGISTER</Link>))}\n                </Button>\n            </form>\n            <br/>\n            <p className=\"login-option\">\n                <Link className=\"login-link\" to=\"/login\">Or Log In</Link>\n            </p>\n            \n        </div>\n    );\n};\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}